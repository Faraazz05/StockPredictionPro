# ============================================
# StockPredictionPro - nginx.conf
# Production-grade Nginx configuration with load balancing, SSL/TLS, security headers, and performance optimization
# ============================================

# Main context configuration
user nginx;
worker_processes auto;  # Automatically detect CPU cores
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events context - connection processing
events {
    worker_connections 4096;  # Increased for high traffic
    use epoll;  # Efficient connection method for Linux
    multi_accept on;  # Accept multiple connections at once
    worker_aio_requests 32;  # Async I/O
}

# HTTP context - main configuration
http {
    # ============================================
    # Basic Settings & Performance
    # ============================================
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    
    # Hide Nginx version for security
    server_tokens off;
    
    # Performance optimizations
    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_max_body_size 100M;  # For file uploads
    
    # Buffer sizes
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Hash table sizes
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    
    # ============================================
    # Logging Configuration
    # ============================================
    
    # Enhanced log format with performance metrics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # API-specific log format
    log_format api '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent rt=$request_time '
                   'upstream="$upstream_addr" '
                   'uct="$upstream_connect_time" uht="$upstream_header_time" '
                   'urt="$upstream_response_time" "$http_user_agent"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # ============================================
    # Gzip Compression
    # ============================================
    
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_disable "msie6";
    
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # ============================================
    # Security Headers (Global)
    # ============================================
    
    # Security headers to be added to all responses
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # ============================================
    # Rate Limiting
    # ============================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # ============================================
    # Upstream Servers (Load Balancing)
    # ============================================
    
    # FastAPI application servers
    upstream stockpred_api {
        # Load balancing method
        least_conn;  # Route to server with least connections
        
        # API server instances
        server api-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server api-2:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check (requires nginx-plus or external module)
        # health_check interval=10s fails=3 passes=2;
        
        # Keep alive connections to upstream
        keepalive 32;
    }
    
    # ============================================
    # HTTP Server (Redirect to HTTPS)
    # ============================================
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security headers
        add_header X-Robots-Tag "noindex, nofollow" always;
        
        # Health check endpoint (no redirect)
        location /health/ping {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            try_files $uri $uri/ =404;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # ============================================
    # HTTPS Server (Main Application)
    # ============================================
    
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name api.stockpredpro.com stockpredpro.com;
        
        # ============================================
        # SSL/TLS Configuration
        # ============================================
        
        # SSL certificates (Let's Encrypt or custom)
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
        # SSL optimization
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=60s;
        resolver_timeout 2s;
        
        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # ============================================
        # API Routes
        # ============================================
        
        # Main API endpoint with rate limiting
        location /api/ {
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_conn addr 10;
            
            # Proxy settings
            proxy_pass http://stockpred_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache control
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
            
            # Custom logging
            access_log /var/log/nginx/api_access.log api;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-API-Key" always;
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Authentication endpoints with stricter rate limiting
        location ~ ^/api/v1/(auth|users) {
            limit_req zone=auth_limit burst=10 nodelay;
            limit_conn addr 5;
            
            proxy_pass http://stockpred_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeouts for auth
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # File upload endpoints
        location ~ ^/api/v1/(models/upload|data/upload) {
            limit_req zone=upload_limit burst=5 nodelay;
            limit_conn addr 2;
            
            # Increase body size for uploads
            client_max_body_size 500M;
            client_body_timeout 300s;
            
            proxy_pass http://stockpred_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable buffering for uploads
            proxy_request_buffering off;
        }
        
        # ============================================
        # Health Check Endpoints
        # ============================================
        
        location /health {
            proxy_pass http://stockpred_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No rate limiting for health checks
            access_log off;
            
            # Quick timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # ============================================
        # Static Files & Downloads
        # ============================================
        
        # Static assets
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Gzip static files
            gzip_static on;
            
            # Security for static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Model downloads (authenticated)
        location /downloads/ {
            alias /var/www/downloads/;
            
            # Require authentication
            auth_request /api/v1/auth/verify;
            
            # Security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            
            # No caching for downloads
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # ============================================
        # Documentation
        # ============================================
        
        # API documentation
        location ~ ^/(docs|redoc|openapi.json) {
            proxy_pass http://stockpred_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache documentation
            proxy_cache_valid 200 1h;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # ============================================
        # Security & Error Handling
        # ============================================
        
        # Block common attack patterns
        location ~* \.(php|aspx|asp|jsp)$ {
            return 444;  # Close connection without response
        }
        
        # Block hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
            return 444;
        }
        
        # Custom error pages
        error_page 400 401 403 404 /error/40x.html;
        error_page 500 502 503 504 /error/50x.html;
        
        location ^~ /error/ {
            root /var/www;
            internal;
        }
        
        # Fallback error page
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # ============================================
        # Root Location
        # ============================================
        
        # Root redirects to API documentation
        location = / {
            return 301 https://$host/docs;
        }
        
        # Default location
        location / {
            proxy_pass http://stockpred_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # ============================================
    # Server Block for Monitoring (Internal)
    # ============================================
    
    server {
        listen 8080;
        server_name localhost;
        access_log off;
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
        }
        
        # Health check endpoint
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ============================================
# Configuration Notes & Usage
# ============================================

# SSL Certificate Setup (Let's Encrypt):
# certbot --nginx -d api.stockpredpro.com -d stockpredpro.com

# Test configuration:
# nginx -t

# Reload configuration:
# nginx -s reload

# Performance tuning notes:
# - Adjust worker_processes based on CPU cores
# - Increase worker_connections for high traffic
# - Tune upstream keepalive connections
# - Monitor access logs for optimization opportunities

# Security considerations:
# - Keep SSL configuration updated
# - Monitor rate limiting effectiveness
# - Review security headers regularly
# - Use fail2ban for additional protection

# Monitoring integration:
# - Use /nginx_status for metrics
# - Set up log aggregation
# - Monitor upstream response times
# - Alert on error rates
