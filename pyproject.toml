# ============================================
# StockPredictionPro - pyproject.toml
# Modern Python packaging and project metadata
# ============================================

[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stockpredictionpro"
version = "1.0.0"
description = "Advanced stock prediction system with regression and classification models"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Mohd Faraz", email = "sp_mohdfaraz@outlook.com"},
]
maintainers = [
    {name = "StockPred Team", email = "team@stockpred.com"},
]
keywords = [
    "stock-prediction",
    "machine-learning", 
    "financial-analysis",
    "regression",
    "classification",
    "streamlit",
    "technical-indicators"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = [
    "streamlit>=1.37.1",
    "pandas>=2.2.2", 
    "numpy>=1.26.4",
    "scikit-learn>=1.5.1",
    "plotly>=5.23.0",
    "yfinance>=0.2.43",
    "ta>=0.11.0",
    "pandas-ta>=0.3.14b0",
    "requests>=2.32.3",
    "python-dotenv>=1.0.1",
    "PyYAML>=6.0.2",
    "joblib>=1.4.2",
    "tqdm>=4.66.4",
    "loguru>=0.7.2",
    "optuna>=3.6.1",
]

[project.optional-dependencies]
api = [
    "fastapi>=0.112.2",
    "uvicorn[standard]>=0.30.6",
    "pydantic>=2.8.2",
]
dev = [
    "black>=24.8.0",
    "isort>=5.13.2",
    "flake8>=7.1.1",
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
]
build = [
    "pyinstaller>=6.10.0",
    "docker>=7.1.0",
]
ml-extra = [
    "xgboost>=2.1.1",
    "lightgbm>=4.5.0",
    "shap>=0.46.0",
]
monitoring = [
    "sentry-sdk>=2.13.0",
    "prometheus-client>=0.20.0",
    "structlog>=24.4.0",
]

[project.urls]
Homepage = "https://github.com/Faraazz05/StockPredictionPro"
Documentation = "https://github.com/Faraazz05/StockPredictionPro/wiki"
Repository = "https://github.com/Faraazz05/StockPredictionPro.git"
"Bug Tracker" = "https://github.com/Faraazz05/StockPredictionPro/issues"
Changelog = "https://github.com/Faraazz05/StockPredictionPro/blob/main/CHANGELOG.md"

[project.scripts]
stockpred = "src.cli:main"
stockpred-train = "scripts.models.train_all_models:main"
stockpred-serve = "src.api.main:serve"

[tool.setuptools.packages.find]
where = ["src"]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.csv", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "app"]
skip_glob = [".*", "build/*", "dist/*"]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "build/",
    "dist/",
    "docs/",
    "notebooks/",
]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "build/*",
    "dist/*",
    "docs/*",
    "notebooks/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "pass",
]
